package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PublicacionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPublicacionAllPropertiesEquals(Publicacion expected, Publicacion actual) {
        assertPublicacionAutoGeneratedPropertiesEquals(expected, actual);
        assertPublicacionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPublicacionAllUpdatablePropertiesEquals(Publicacion expected, Publicacion actual) {
        assertPublicacionUpdatableFieldsEquals(expected, actual);
        assertPublicacionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPublicacionAutoGeneratedPropertiesEquals(Publicacion expected, Publicacion actual) {
        assertThat(actual)
            .as("Verify Publicacion auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPublicacionUpdatableFieldsEquals(Publicacion expected, Publicacion actual) {
        assertThat(actual)
            .as("Verify Publicacion relevant properties")
            .satisfies(a -> assertThat(a.getTitulo()).as("check titulo").isEqualTo(expected.getTitulo()))
            .satisfies(a -> assertThat(a.getContenido()).as("check contenido").isEqualTo(expected.getContenido()))
            .satisfies(a -> assertThat(a.getFechaPublicacion()).as("check fechaPublicacion").isEqualTo(expected.getFechaPublicacion()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPublicacionUpdatableRelationshipsEquals(Publicacion expected, Publicacion actual) {
        assertThat(actual)
            .as("Verify Publicacion relationships")
            .satisfies(a -> assertThat(a.getEtiquetas()).as("check etiquetas").isEqualTo(expected.getEtiquetas()))
            .satisfies(a -> assertThat(a.getAutor()).as("check autor").isEqualTo(expected.getAutor()));
    }
}
